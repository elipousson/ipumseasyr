[{"path":"https://elipousson.github.io/ipumseasyr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ipumseasyr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer, copyright holder.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2024). ipumseasyr: Easy Access IPUMS Data. R package version 0.1.0,  https://elipousson.github.io/ipumseasyr/, https://github.com/elipousson/ipumseasyr.","code":"@Manual{,   title = {ipumseasyr: Easy Access to IPUMS Data},   author = {Eli Pousson},   year = {2024},   note = {R package version 0.1.0,  https://elipousson.github.io/ipumseasyr/},   url = {https://github.com/elipousson/ipumseasyr}, }"},{"path":"https://elipousson.github.io/ipumseasyr/index.html","id":"ipumseasyr","dir":"","previous_headings":"","what":"Easy Access to IPUMS Data","title":"Easy Access to IPUMS Data","text":"goal ipumseasyr ease access IPUMS data (especially NHGIS data) easy--use wrappers {ipumsr} package.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easy Access to IPUMS Data","text":"can install development version ipumseasyr GitHub:","code":"# pak::pkg_install(\"elipousson/ipumseasyr\")"},{"path":"https://elipousson.github.io/ipumseasyr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Easy Access to IPUMS Data","text":"Define extract without submitting : Get extract (using extract extract history):","code":"library(ipumseasyr) state_population_extract <- define_nhgis_ts_extract(   year = seq(1990, 2010, by = 10),   tables = \"CL8\",   geography = \"state\" )  state_population_extract #> Unsubmitted IPUMS NHGIS extract  #> Description:  #>  #> Time Series Table: CL8 #>   Geog Levels: state #>   Years: 1990, 2000, 2010 nhgis_extracts <- get_nhgis_extract_history()  withr::with_tempdir({   state_population <- get_nhgis_ts_data(     extract = nhgis_extracts[[1]]   )    dplyr::glimpse(state_population) }) #> Successfully submitted IPUMS NHGIS extract number 30 #> Checking extract status... #> Waiting 10 seconds... #> Checking extract status... #> Waiting 20 seconds... #> Checking extract status... #> IPUMS NHGIS extract 30 is ready to download. #>   |                                                                              |                                                                      |   0%  |                                                                              |====                                                                  |   6%  |                                                                              |==========                                                            |  15%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> Data file saved to /private/var/folders/3f/50m42dx1333_dfqb5772j6_40000gn/T/RtmpUu23eI/file450974b29832/nhgis0030_csv.zip #> Use of data from NHGIS is subject to conditions including that users should cite the data appropriately. Use command `ipums_conditions()` for more details. #> Rows: 9419 Columns: 10 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (8): GISJOIN, STATE, STATEFP, STATENH, COUNTY, COUNTYFP, COUNTYNH, NAME #> dbl (2): YEAR, A00AA #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Use of data from NHGIS is subject to conditions including that users should cite the data appropriately. Use command `ipums_conditions()` for more details. #>  #> Rows: 153 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (5): GISJOIN, STATE, STATEFP, STATENH, NAME #> dbl (2): YEAR, A00AA #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 9,572 #> Columns: 11 #> $ filename <chr> \"nhgis0030_csv/nhgis0030_ts_nominal_county.csv\", \"nhgis0030_c… #> $ GISJOIN  <chr> \"G0100010\", \"G0100030\", \"G0100050\", \"G0100070\", \"G0100090\", \"… #> $ YEAR     <dbl> 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1… #> $ STATE    <chr> \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alaba… #> $ STATEFP  <chr> \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"… #> $ STATENH  <chr> \"010\", \"010\", \"010\", \"010\", \"010\", \"010\", \"010\", \"010\", \"010\"… #> $ COUNTY   <chr> \"Autauga County\", \"Baldwin County\", \"Barbour County\", \"Bibb C… #> $ COUNTYFP <chr> \"001\", \"003\", \"005\", \"007\", \"009\", \"011\", \"013\", \"015\", \"017\"… #> $ COUNTYNH <chr> \"0010\", \"0030\", \"0050\", \"0070\", \"0090\", \"0110\", \"0130\", \"0150… #> $ NAME     <chr> \"AUTAUGA COUNTY\", \"BALDWIN COUNTY\", \"BARBOUR COUNTY\", \"BIBB C… #> $ A00AA    <dbl> 32259, 78556, 24756, 15723, 36459, 10596, 21680, 119761, 3919…"},{"path":"https://elipousson.github.io/ipumseasyr/reference/define_nhgis_ts_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a NHGIS time series extract using ipumsr::define_extract_nhgis — define_nhgis_ts_extract","title":"Define a NHGIS time series extract using ipumsr::define_extract_nhgis — define_nhgis_ts_extract","text":"define_nhgis_ts_extract() wrapper ipumsr::define_extract_nhgis() defaults support creation tidy data using read_nhgis_data() pivot_nhgis_data().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/define_nhgis_ts_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a NHGIS time series extract using ipumsr::define_extract_nhgis — define_nhgis_ts_extract","text":"","code":"define_nhgis_ts_extract(   year = NULL,   tables = NULL,   geography = c(\"county\", \"state\"),   extent = \"us\",   output = c(\"tidy\", \"wide\", \"file\"),   shape_year = NULL,   basis = 2008,   geometry = FALSE,   ...,   time_series_tables = NULL,   description = NULL,   shapefiles = NULL,   data_format = \"csv_no_header\",   validate = TRUE,   api_key = Sys.getenv(\"IPUMS_API_KEY\") )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/define_nhgis_ts_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a NHGIS time series extract using ipumsr::define_extract_nhgis — define_nhgis_ts_extract","text":"output Used set tst_layout value. c(\"tidy\", \"wide\", \"file\") corresponding \"time_by_row_layout\", \"time_by_column_layout\", \"time_by_file_layout\". geometry TRUE, include shapefiles defined extract. shapefiles NULL, function uses list_nhgis_shapefiles() shape_year year parameter. ... Arguments passed ipumsr::define_extract_nhgis datasets List dataset specifications datasets include extract request. Use ds_spec() create ds_spec object containing dataset specification. See examples. geographic_extents Vector geographic extents use datasets extract definition (instance, obtain data within particular state). Use \"*\" select available extents. Required datasets included extract definition include geog_levels require extent selection. See get_metadata_nhgis() determine geographic level requires extent selection. time writing, NHGIS supports extent selection blocks block groups. breakdown_and_data_type_layout desired layout datasets multiple data types breakdown values. \"single_file\" (default) keeps data types breakdown values one file \"separate_files\" splits data type breakdown value file Required datasets included extract definition consist multiple data types (instance, estimates margins error) multiple breakdown values specified. See get_metadata_nhgis() determine whether requested dataset multiple data types. time_series_tables List time series table specifications time series tables include extract request. Use tst_spec() create tst_spec object containing time series table specification. See examples. description Description extract. shapefiles Names shapefiles include extract request. data_format desired format extract data file. \"csv_no_header\" (default) includes minimal header first row \"csv_header\" includes second, descriptive header row. \"fixed_width\" provides data fixed width format Note default, read_nhgis() removes additional header row \"csv_header\" files. Required extract definition includes datasets time_series_tables. api_key API key associated user account. Defaults value IPUMS_API_KEY environment variable. See set_ipums_api_key().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/download_ipumsr_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Download IPUMS extract using ipumsr::wait_for_extract and ipumsr::download_extract — download_ipumsr_extract","title":"Download IPUMS extract using ipumsr::wait_for_extract and ipumsr::download_extract — download_ipumsr_extract","text":"download_ipumsr_extract() wrapper ipumsr::wait_for_extract() ipumsr::download_extract() wait extract ready download attempting download .","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/download_ipumsr_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download IPUMS extract using ipumsr::wait_for_extract and ipumsr::download_extract — download_ipumsr_extract","text":"","code":"download_ipumsr_extract(   extract = NULL,   download_dir = getwd(),   overwrite = FALSE,   progress = TRUE,   ...,   api_key = Sys.getenv(\"IPUMS_API_KEY\") )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/download_ipumsr_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download IPUMS extract using ipumsr::wait_for_extract and ipumsr::download_extract — download_ipumsr_extract","text":"extract One : ipums_extract object data collection extract number formatted string form \"collection:number\" vector form c(\"collection\", number) extract number associated default IPUMS collection. See set_ipums_default_collection() list codes used refer collection, see ipums_data_collections(). download_dir Path directory files written. Defaults current working directory. overwrite TRUE, overwrite conflicting files already exist download_dir. Defaults FALSE. progress TRUE, output progress bar showing status download request. Defaults TRUE. ... Arguments passed ipumsr::wait_for_extract initial_delay_seconds Seconds wait first status check. wait time automatically increase 10 seconds successive check. max_delay_seconds Maximum interval wait status checks. wait interval reaches value, checks continue occur max_delay_seconds intervals extract complete timeout_seconds reached. Defaults 300 seconds (5 minutes). timeout_seconds Maximum total number seconds continue waiting extract throwing error. Defaults 10,800 seconds (3 hours). verbose TRUE, print status updates R console beginning wait interval upon extract completion. Defaults TRUE. api_key API key associated user account. Defaults value IPUMS_API_KEY environment variable. See set_ipums_api_key().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/filter_nhgisjoin.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a NHGIS data frame by a state FIPS and county FIPS numbers — filter_nhgisjoin","title":"Filter a NHGIS data frame by a state FIPS and county FIPS numbers — filter_nhgisjoin","text":"default, filter counties Baltimore metro area.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/filter_nhgisjoin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a NHGIS data frame by a state FIPS and county FIPS numbers — filter_nhgisjoin","text":"","code":"filter_nhgisjoin(   data,   state = NULL,   county = NULL,   values = NULL,   gisjoin_col = \"NHGISJOIN\" )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/filter_nhgisjoin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a NHGIS data frame by a state FIPS and county FIPS numbers — filter_nhgisjoin","text":"values Optional vector GISJOIN values. state_fips county_fips ignored supplied.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/fmt_nhgis_places.html","id":null,"dir":"Reference","previous_headings":"","what":"Format NHGIS places data by joining additional attributes and adding a label column — fmt_nhgis_places","title":"Format NHGIS places data by joining additional attributes and adding a label column — fmt_nhgis_places","text":"fmt_nhgis_places() joins Census division, region, USPS abbreviation columns based state value creates new label column following pattern \", \".","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/fmt_nhgis_places.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format NHGIS places data by joining additional attributes and adding a label column — fmt_nhgis_places","text":"","code":"fmt_nhgis_places(   data,   label_col = \"label\",   name_col = \"NAME\",   remove_pattern = \" city$\" )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/fmt_nhgis_places.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format NHGIS places data by joining additional attributes and adding a label column — fmt_nhgis_places","text":"label_col Label column name. name_col Name column use basis label. remove_pattern Passed pattern stringr::str_remove()","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_ipumsr_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cached object from {ipumseasyr} package cache — get_ipumsr_cache","title":"Get cached object from {ipumseasyr} package cache — get_ipumsr_cache","text":"get_ipumsr_cache() reads cached IPUMS data file using readr::read_rds().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_ipumsr_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cached object from {ipumseasyr} package cache — get_ipumsr_cache","text":"","code":"get_ipumsr_cache(code, refresh = FALSE, file = NULL, path = ipumsr_cache_dir())"},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_ipumsr_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cached object from {ipumseasyr} package cache — get_ipumsr_cache","text":"refresh FALSE, read file cache. TRUE, read file cache exists supplied path. file File name cached RDS file. path Path package cache directory. Defaults ipumsr_cache_dir()","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_ipumsr_extract_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Get extract paths for extract with optional support for cached extract files — get_ipumsr_extract_paths","title":"Get extract paths for extract with optional support for cached extract files — get_ipumsr_extract_paths","text":"Download extract download_ipumsr_extract() return list file paths data shape files.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_ipumsr_extract_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get extract paths for extract with optional support for cached extract files — get_ipumsr_extract_paths","text":"","code":"get_ipumsr_extract_paths(   extract = NULL,   data_file = NULL,   shape_file = NULL,   submit_extract = TRUE,   download_extract = TRUE,   download_dir = getwd(),   overwrite = FALSE,   progress = TRUE,   refresh = FALSE,   api_key = Sys.getenv(\"IPUMS_API_KEY\") )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_ipumsr_extract_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get extract paths for extract with optional support for cached extract files — get_ipumsr_extract_paths","text":"extract ipums_extract object. submit_extract extract NULL submit_extract = TRUE, use ipumsr::submit_extract submit extract. download_dir Path directory files written. Defaults current working directory. overwrite TRUE, overwrite conflicting files already exist download_dir. Defaults FALSE. progress TRUE, output progress bar showing status download request. Defaults TRUE. api_key API key associated user account. Defaults value IPUMS_API_KEY environment variable. See set_ipums_api_key().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_ipumsr_extract_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get extract paths for extract with optional support for cached extract files — get_ipumsr_extract_paths","text":"named list \"data\" \"shape\" elements containing extract file paths.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_nhgis_ts_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NHGIS time series data — get_nhgis_ts_data","title":"Get NHGIS time series data — get_nhgis_ts_data","text":"Use define_nhgis_ts_extract(), ipumsr::submit_extract(), ipumsr::download_extract(), read_nhgis_files() define, submit, download, read NHGIS time series extract. function recommended interactive use recommended requesting large number tables geographies.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_nhgis_ts_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NHGIS time series data — get_nhgis_ts_data","text":"","code":"get_nhgis_ts_data(   year = NULL,   tables = NULL,   geography = c(\"county\", \"state\"),   extent = \"us\",   output = c(\"tidy\", \"wide\", \"file\"),   basis = 2008,   shape_year = NULL,   geometry = FALSE,   extract = NULL,   data_file = NULL,   shape_file = NULL,   state = NULL,   ...,   time_series_tables = NULL,   description = NULL,   shapefiles = NULL,   data_format = \"csv_no_header\",   validate = TRUE,   submit_extract = TRUE,   download_extract = TRUE,   read_files = TRUE,   download_dir = getwd(),   overwrite = FALSE,   progress = TRUE,   verbose = progress,   api_key = Sys.getenv(\"IPUMS_API_KEY\") )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_nhgis_ts_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NHGIS time series data — get_nhgis_ts_data","text":"output Used set tst_layout value. c(\"tidy\", \"wide\", \"file\") corresponding \"time_by_row_layout\", \"time_by_column_layout\", \"time_by_file_layout\". geometry TRUE, include shapefiles defined extract. shapefiles NULL, function uses list_nhgis_shapefiles() shape_year year parameter. extract ipums_extract object. data_file Path .zip archive containing NHGIS extract single file NHGIS extract. shape_file Path single .shp file .zip archive containing least one .shp file. See Details section. time_series_tables List time series table specifications time series tables include extract request. Use tst_spec() create tst_spec object containing time series table specification. See examples. description Description extract. shapefiles Names shapefiles include extract request. data_format desired format extract data file. \"csv_no_header\" (default) includes minimal header first row \"csv_header\" includes second, descriptive header row. \"fixed_width\" provides data fixed width format Note default, read_nhgis() removes additional header row \"csv_header\" files. Required extract definition includes datasets time_series_tables. download_dir Path directory files written. Defaults current working directory. overwrite TRUE, overwrite conflicting files already exist download_dir. Defaults FALSE. progress TRUE, output progress bar showing status download request. Defaults TRUE. verbose Logical controlling whether display output loading data. TRUE, displays IPUMS conditions, progress bar, column types. Otherwise, suppressed. overridden readr.show_progress readr.show_col_types options, set. api_key API key associated user account. Defaults value IPUMS_API_KEY environment variable. See set_ipums_api_key().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipums_extract_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Get IPUMS Extract histories — ipums_extract_history","title":"Get IPUMS Extract histories — ipums_extract_history","text":"Get IPUMS Extract histories","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipums_extract_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get IPUMS Extract histories — ipums_extract_history","text":"","code":"get_nhgis_extract_history(...)  get_usa_extract_history(...)  get_cps_extract_history(...)  get_ipumsi_extract_history(...)"},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipums_extract_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get IPUMS Extract histories — ipums_extract_history","text":"... Arguments passed ipumsr::get_extract_history how_many number extract requests retrieve information. Defaults 10 recent extracts. delay Number seconds delay successive API requests, multiple requests needed retrieve records. delay highly unlikely necessary intended fallback event retrieve extract history without exceeding API rate limit. api_key API key associated user account. Defaults value IPUMS_API_KEY environment variable. See set_ipums_api_key().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipumseasyr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ipumseasyr: Easy Access to IPUMS Data — ipumseasyr-package","title":"ipumseasyr: Easy Access to IPUMS Data — ipumseasyr-package","text":"package helper functions extending ipumsr package accessing NHGIS IPUMS data sources.","code":""},{"path":[]},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipumseasyr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ipumseasyr: Easy Access to IPUMS Data — ipumseasyr-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipumsr_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to {ipumseasyr} package cache directory — ipumsr_cache_dir","title":"Get path to {ipumseasyr} package cache directory — ipumsr_cache_dir","text":"Get path {ipumseasyr} package cache directory","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipumsr_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to {ipumseasyr} package cache directory — ipumsr_cache_dir","text":"","code":"ipumsr_cache_dir(pkg = \"ipumseasyr\")"},{"path":"https://elipousson.github.io/ipumseasyr/reference/join_nhgis_percent_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Join a percent change in variable relative to a reference year — join_nhgis_percent_change","title":"Join a percent change in variable relative to a reference year — join_nhgis_percent_change","text":"join_nhgis_percent_change() joins percent change column relative reference year. Optionally join rank reference year using dplyr::ntile().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/join_nhgis_percent_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join a percent change in variable relative to a reference year — join_nhgis_percent_change","text":"","code":"join_nhgis_percent_change(   data,   reference_year = NULL,   value_col = \"value\",   reference_prefix = \"reference_\",   gisjoin_col = \"NHGISCODE\",   variable_col = \"variable\",   year_col = \"YEAR\",   rank_col = \"rank\",   rank = NULL,   rank_n = NULL,   ...,   perc_prefix = \"perc_change_\",   digits = 2 )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/join_nhgis_percent_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join a percent change in variable relative to a reference year — join_nhgis_percent_change","text":"reference_year Reference year use calculating percent change column. rank, rank_n Passed x n arguments dplyr::ntile() join reference rank value.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/labs_nhgis.html","id":null,"dir":"Reference","previous_headings":"","what":"Label ggplot2 plots with the appropriate credit caption for NHGIS data — labs_nhgis","title":"Label ggplot2 plots with the appropriate credit caption for NHGIS data — labs_nhgis","text":"labs_nhgis() adds standard credit caption NHGIS data make consistent attribution easier.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/labs_nhgis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label ggplot2 plots with the appropriate credit caption for NHGIS data — labs_nhgis","text":"","code":"labs_nhgis(   ...,   caption = NULL,   credit = \"IPUMS NHGIS, University of Minnesota, www.nhgis.org.\",   prefix = \"Source: \",   collapse = \" \",   width = 80 )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/labs_nhgis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label ggplot2 plots with the appropriate credit caption for NHGIS data — labs_nhgis","text":"... Arguments passed ggplot2::labs title text title. subtitle text subtitle plot displayed title. caption text caption displayed bottom-right plot default. tag text tag label displayed top-left plot default. alt,alt_insight Text used generation alt-text plot. See get_alt_text examples. credit Credit line IPUMS. collapse String collapse caption credit. Defaults \" \". Set \"\\n\" place credit line separate line following caption. Ignored caption NULL. width Maximum width caption line passed stringr::str_wrap().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/list_nhgis_shapefiles.html","id":null,"dir":"Reference","previous_headings":"","what":"List NHGIS Shapefiles — list_nhgis_shapefiles","title":"List NHGIS Shapefiles — list_nhgis_shapefiles","text":"List NHGIS Shapefiles","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/list_nhgis_shapefiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List NHGIS Shapefiles — list_nhgis_shapefiles","text":"","code":"list_nhgis_shapefiles(   geography = c(\"county\", \"state\"),   year,   extent = \"us\",   basis = 2008,   validate = FALSE,   ...,   api_key = Sys.getenv(\"IPUMS_API_KEY\") )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/list_nhgis_ts_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"List NHGIS time series tables using ipumsr::get_metadata_nhgis — list_nhgis_ts_tables","title":"List NHGIS time series tables using ipumsr::get_metadata_nhgis — list_nhgis_ts_tables","text":"Use ipumsr::get_metadata_nhgis() type = \"time_series_tables\" return data frame time series tables. Optionally filter geographical integration type \"nominal\" \"standardized\" (\"2010\" \"standardized 2010\" also work).","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/list_nhgis_ts_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List NHGIS time series tables using ipumsr::get_metadata_nhgis — list_nhgis_ts_tables","text":"","code":"list_nhgis_ts_tables(   ...,   cache = TRUE,   cache_file = \"nhgis_time_series_tables.rds\",   refresh = FALSE,   integration = NULL )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/list_nhgis_ts_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List NHGIS time series tables using ipumsr::get_metadata_nhgis — list_nhgis_ts_tables","text":"... Additional parameters passed ipumsr::get_metadata_nhgis() refresh FALSE, read file cache. TRUE, read file cache exists supplied path. integration Optional filter geographical integration.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/lookup_nhgis_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup NHGIS State Code — lookup_nhgis_state","title":"Lookup NHGIS State Code — lookup_nhgis_state","text":"Lookup NHGIS State Code","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/lookup_nhgis_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup NHGIS State Code — lookup_nhgis_state","text":"","code":"lookup_nhgis_state(state)"},{"path":"https://elipousson.github.io/ipumseasyr/reference/lookup_nhgis_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup NHGIS State Code — lookup_nhgis_state","text":"state State name, abbreviation, FIPS code, NHGIS code","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/nhgis_ts_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"NHGIS Time Series Table names — nhgis_ts_tables","title":"NHGIS Time Series Table names — nhgis_ts_tables","text":"vector NHGIS time series table names named table descriptions.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/nhgis_ts_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NHGIS Time Series Table names — nhgis_ts_tables","text":"","code":"nhgis_ts_tables"},{"path":"https://elipousson.github.io/ipumseasyr/reference/nhgis_ts_tables.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NHGIS Time Series Table names — nhgis_ts_tables","text":"character vector 389 time series table names.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/pivot_nhgis_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot NHGIS data longer to assign denominator variables and join percent values — pivot_nhgis_data","title":"Pivot NHGIS data longer to assign denominator variables and join percent values — pivot_nhgis_data","text":"pivot_nhgis_data() uses tidyr::pivot_longer() switches NHGIS data wide long format creates denominator column based preset crosswalk variables corresponding denominators. input data must variable column labels present. join_nhgis_percent() uses denominator values added pivoting calculating percent share value. feature supported many popular NHGIS time series variables. function uses similar set conventions {getACS} package support ease code reuse NHGIS American Community Survey (ACS) data. present, numeric columns appear identifier pivoted.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/pivot_nhgis_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot NHGIS data longer to assign denominator variables and join percent values — pivot_nhgis_data","text":"","code":"pivot_nhgis_data(   data,   variable_col = \"variable\",   value_col = \"value\",   column_title_col = \"column_title\",   denominator_prefix = \"denominator_\",   cols_vary = \"slowest\",   denominators = list(persons = \"A00AA\", families = \"A68AA\", housing_units = \"A41AA\",     occupied_units = \"A43AA\"),   call = caller_env() )  join_nhgis_percent(   data,   variable_col = \"variable\",   value_col = \"value\",   column_title_col = \"column_title\",   denominator_prefix = \"denominator_\",   perc_prefix = \"perc_\",   join_cols = c(\"GISJOIN\", \"YEAR\"),   digits = 2 )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/pivot_nhgis_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot NHGIS data longer to assign denominator variables and join percent values — pivot_nhgis_data","text":"data data frame pivot. variable_col Variable column name value_col Value column name column_title_col Column title column name (created column labels) cols_vary pivoting cols longer format, output rows arranged relative original row number? \"fastest\", default, keeps individual rows cols close together output. often produces intuitively ordered output least one key column data involved pivoting process. \"slowest\" keeps individual columns cols close together output. often produces intuitively ordered output utilize columns data pivoting process. denominators Named list denominator values. call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages. perc_prefix Prefix string use calculated percent value.","code":""},{"path":[]},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_ipums_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Read IPUMS geometry using ipumsr::read_ipums_sf — read_ipums_geometry","title":"Read IPUMS geometry using ipumsr::read_ipums_sf — read_ipums_geometry","text":"Read IPUMS geometry using ipumsr::read_ipums_sf","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_ipums_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read IPUMS geometry using ipumsr::read_ipums_sf — read_ipums_geometry","text":"","code":"read_ipums_geometry(   shape_file = NULL,   path = NULL,   file_select = NULL,   vars = \"GISJOIN\",   encoding = NULL,   bind_multiple = TRUE,   add_layer_var = NULL,   verbose = FALSE )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_ipums_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read IPUMS geometry using ipumsr::read_ipums_sf — read_ipums_geometry","text":"shape_file Path single .shp file .zip archive containing least one .shp file. See Details section. file_select shape_file .zip archive contains multiple files, expression identifying files load. Accepts character string specifying file name, tidyselect selection, index position. multiple files selected, bind_multiple must equal TRUE. vars Names variables include output. Accepts character vector names tidyselect selection. NULL, includes variables file. encoding Encoding use reading shape file. NULL, defaults \"latin1\" unless file includes .cpg metadata file encoding information. default value generally appropriate. bind_multiple TRUE shape_file contains multiple .shp files, row-bind files single sf object. Useful shape_file contains multiple files represent geographic units different extents (e.g. block-level data multiple states). add_layer_var TRUE, add variable output data indicating file row originates . Defaults FALSE unless bind_multiple = TRUE multiple files exist shape_file. column name always prefixed \"layer\", adjusted avoid name conflicts another column named \"layer\" already exists data. verbose TRUE report additional progress information load.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read NHGIS data using ipumsr::read_nhgis — read_nhgis_data","title":"Read NHGIS data using ipumsr::read_nhgis — read_nhgis_data","text":"Read NHGIS data using ipumsr::read_nhgis","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read NHGIS data using ipumsr::read_nhgis — read_nhgis_data","text":"","code":"read_nhgis_data(   data_file = NULL,   path = NULL,   file_select = NULL,   multiple = TRUE,   verbose = FALSE,   ...,   format = c(\"tidy\", \"wide\"),   variable_col = \"variable\",   value_col = \"value\",   column_title_col = \"column_title\",   denominator_prefix = \"denominator_\",   perc_prefix = \"perc_\",   digits = 2 )  read_nhgis_ext(   data_file,   file_select = NULL,   verbose = FALSE,   var_attrs = c(\"val_labels\", \"var_label\", \"var_desc\"),   show_col_types = FALSE,   ...,   format = \"tidy\",   variable_col = \"variable\",   value_col = \"value\",   column_title_col = \"column_title\",   denominator_prefix = \"denominator_\",   perc_prefix = \"perc_\",   digits = 2 )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read NHGIS data using ipumsr::read_nhgis — read_nhgis_data","text":"data_file Path .zip archive containing NHGIS extract single file NHGIS extract. file_select data_file .zip archive contains multiple files, expression identifying file load. Accepts character vector specifying file name, tidyselect selection, index position. must uniquely identify file. verbose Logical controlling whether display output loading data. TRUE, displays IPUMS conditions, progress bar, column types. Otherwise, suppressed. overridden readr.show_progress readr.show_col_types options, set. var_attrs Variable attributes add codebook (.txt) file included extract. Defaults available attributes. See set_ipums_var_attributes() details.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read NHGIS data and geometry — read_nhgis_files","title":"Read NHGIS data and geometry — read_nhgis_files","text":"Read NHGIS data geometry return named list combined sf object.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read NHGIS data and geometry — read_nhgis_files","text":"","code":"read_nhgis_files(   path = NULL,   data_file = NULL,   data_file_select = NULL,   shape_file = NULL,   shape_file_select = NULL,   verbose = FALSE,   geometry = FALSE,   ... )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read NHGIS data and geometry — read_nhgis_files","text":"path Optional data_file supplied. named list \"data\" \"shape\" element containing paths data_file shape_file arguments used ipumsr::read_nhgis() ipumsr::read_ipums_sf(). data_file Path .zip archive containing NHGIS extract single file NHGIS extract. data_file_select, shape_file_select Passed file_select parameter read_nhgis_data() read_ipums_geometry(). shape_file Path single .shp file .zip archive containing least one .shp file. See Details section. verbose Logical controlling whether display output loading data. TRUE, displays IPUMS conditions, progress bar, column types. Otherwise, suppressed. overridden readr.show_progress readr.show_col_types options, set.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read NHGIS data and geometry — read_nhgis_files","text":"named list \"data\" \"shape\" elements combined sf data frame.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/usa_states.html","id":null,"dir":"Reference","previous_headings":"","what":"U.S. States Reference data — usa_states","title":"U.S. States Reference data — usa_states","text":"Reference data U.S. state names, USPS abbreviations, Census divisions, regions.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/usa_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U.S. States Reference data — usa_states","text":"","code":"usa_states"},{"path":"https://elipousson.github.io/ipumseasyr/reference/usa_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U.S. States Reference data — usa_states","text":"data frame 50 rows 4 variables: STATE State name STUSPS State USPS abbreviation division U.S. Census Division name region U.S. Census Region name","code":""}]
