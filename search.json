[{"path":"https://elipousson.github.io/ipumseasyr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ipumseasyr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer, copyright holder.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2024). ipumseasyr: Easy Access IPUMS Data. R package version 0.1.0,  https://elipousson.github.io/ipumseasyr/, https://github.com/elipousson/ipumseasyr.","code":"@Manual{,   title = {ipumseasyr: Easy Access to IPUMS Data},   author = {Eli Pousson},   year = {2024},   note = {R package version 0.1.0,  https://elipousson.github.io/ipumseasyr/},   url = {https://github.com/elipousson/ipumseasyr}, }"},{"path":"https://elipousson.github.io/ipumseasyr/index.html","id":"ipumseasyr","dir":"","previous_headings":"","what":"Easy Access to IPUMS Data","title":"Easy Access to IPUMS Data","text":"goal ipumseasyr ease access IPUMS data (especially NHGIS data) easy--use wrappers {ipumsr} package.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easy Access to IPUMS Data","text":"can install development version ipumseasyr GitHub:","code":"# pak::pkg_install(\"elipousson/ipumseasyr\")"},{"path":"https://elipousson.github.io/ipumseasyr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Easy Access to IPUMS Data","text":"Define extract without submitting : Get extract (using extract extract history):","code":"library(ipumseasyr) state_population_extract <- define_nhgis_ts_extract(   year = seq(1990, 2010, by = 10),   tables = \"CL8\",   geography = \"state\" )  state_population_extract #> Unsubmitted IPUMS NHGIS extract  #> Description:  #>  #> Time Series Table: CL8 #>   Geog Levels: state #>   Years: 1990, 2000, 2010 nhgis_extracts <- get_nhgis_extract_history()  withr::with_tempdir({   state_population <- get_nhgis_ts_data(     extract = nhgis_extracts[[1]]   )    dplyr::glimpse(state_population) }) #> Successfully submitted IPUMS NHGIS extract number 30 #> Checking extract status... #> Waiting 10 seconds... #> Checking extract status... #> Waiting 20 seconds... #> Checking extract status... #> IPUMS NHGIS extract 30 is ready to download. #>   |                                                                              |                                                                      |   0%  |                                                                              |====                                                                  |   6%  |                                                                              |==========                                                            |  15%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> Data file saved to /private/var/folders/3f/50m42dx1333_dfqb5772j6_40000gn/T/RtmpUu23eI/file450974b29832/nhgis0030_csv.zip #> Use of data from NHGIS is subject to conditions including that users should cite the data appropriately. Use command `ipums_conditions()` for more details. #> Rows: 9419 Columns: 10 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (8): GISJOIN, STATE, STATEFP, STATENH, COUNTY, COUNTYFP, COUNTYNH, NAME #> dbl (2): YEAR, A00AA #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Use of data from NHGIS is subject to conditions including that users should cite the data appropriately. Use command `ipums_conditions()` for more details. #>  #> Rows: 153 Columns: 7 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (5): GISJOIN, STATE, STATEFP, STATENH, NAME #> dbl (2): YEAR, A00AA #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 9,572 #> Columns: 11 #> $ filename <chr> \"nhgis0030_csv/nhgis0030_ts_nominal_county.csv\", \"nhgis0030_c… #> $ GISJOIN  <chr> \"G0100010\", \"G0100030\", \"G0100050\", \"G0100070\", \"G0100090\", \"… #> $ YEAR     <dbl> 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1980, 1… #> $ STATE    <chr> \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alaba… #> $ STATEFP  <chr> \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"01\", \"… #> $ STATENH  <chr> \"010\", \"010\", \"010\", \"010\", \"010\", \"010\", \"010\", \"010\", \"010\"… #> $ COUNTY   <chr> \"Autauga County\", \"Baldwin County\", \"Barbour County\", \"Bibb C… #> $ COUNTYFP <chr> \"001\", \"003\", \"005\", \"007\", \"009\", \"011\", \"013\", \"015\", \"017\"… #> $ COUNTYNH <chr> \"0010\", \"0030\", \"0050\", \"0070\", \"0090\", \"0110\", \"0130\", \"0150… #> $ NAME     <chr> \"AUTAUGA COUNTY\", \"BALDWIN COUNTY\", \"BARBOUR COUNTY\", \"BIBB C… #> $ A00AA    <dbl> 32259, 78556, 24756, 15723, 36459, 10596, 21680, 119761, 3919…"},{"path":"https://elipousson.github.io/ipumseasyr/reference/define_nhgis_ts_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a NHGIS time series extract — define_nhgis_ts_extract","title":"Define a NHGIS time series extract — define_nhgis_ts_extract","text":"Define NHGIS time series extract","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/define_nhgis_ts_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a NHGIS time series extract — define_nhgis_ts_extract","text":"","code":"define_nhgis_ts_extract(   year = NULL,   tables = NULL,   geography = c(\"county\", \"state\"),   extent = \"us\",   output = c(\"tidy\", \"wide\", \"file\"),   shape_year = NULL,   basis = 2008,   geometry = FALSE,   ...,   time_series_tables = NULL,   description = NULL,   shapefiles = NULL,   data_format = \"csv_no_header\",   validate = TRUE,   api_key = Sys.getenv(\"IPUMS_API_KEY\") )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/define_nhgis_ts_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a NHGIS time series extract — define_nhgis_ts_extract","text":"output Used set tst_layout value. c(\"tidy\", \"wide\", \"file\") extract NULL, extract returned .","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/download_ipumsr_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Download IPUMS extract using ipumsr::wait_for_extract and\nipumsr::download_extract — download_ipumsr_extract","title":"Download IPUMS extract using ipumsr::wait_for_extract and\nipumsr::download_extract — download_ipumsr_extract","text":"Download IPUMS extract using ipumsr::wait_for_extract ipumsr::download_extract","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/download_ipumsr_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download IPUMS extract using ipumsr::wait_for_extract and\nipumsr::download_extract — download_ipumsr_extract","text":"","code":"download_ipumsr_extract(   extract = NULL,   download_dir = getwd(),   overwrite = FALSE,   progress = TRUE,   api_key = Sys.getenv(\"IPUMS_API_KEY\") )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/download_ipumsr_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download IPUMS extract using ipumsr::wait_for_extract and\nipumsr::download_extract — download_ipumsr_extract","text":"extract One : ipums_extract object data collection extract number formatted string form \"collection:number\" vector form c(\"collection\", number) extract number associated default IPUMS collection. See set_ipums_default_collection() list codes used refer collection, see ipums_data_collections(). download_dir Path directory files written. Defaults current working directory. overwrite TRUE, overwrite conflicting files already exist download_dir. Defaults FALSE. progress TRUE, output progress bar showing status download request. Defaults TRUE. api_key API key associated user account. Defaults value IPUMS_API_KEY environment variable. See set_ipums_api_key().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_ipumsr_extract_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Get extract paths for extract with optional support for cached extract files — get_ipumsr_extract_paths","title":"Get extract paths for extract with optional support for cached extract files — get_ipumsr_extract_paths","text":"Download extract download_ipumsr_extract() return list file paths.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_ipumsr_extract_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get extract paths for extract with optional support for cached extract files — get_ipumsr_extract_paths","text":"","code":"get_ipumsr_extract_paths(   extract = NULL,   data_file = NULL,   shape_file = NULL,   submit_extract = TRUE,   download_extract = TRUE,   download_dir = getwd(),   overwrite = FALSE,   progress = TRUE,   refresh = FALSE,   api_key = Sys.getenv(\"IPUMS_API_KEY\") )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_ipumsr_extract_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get extract paths for extract with optional support for cached extract files — get_ipumsr_extract_paths","text":"extract ipums_extract object. submit_extract extract NULL submit_extract = TRUE, use ipumsr::submit_extract submit extract. api_key API key associated user account. Defaults value IPUMS_API_KEY environment variable. See set_ipums_api_key().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_ipumsr_extract_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get extract paths for extract with optional support for cached extract files — get_ipumsr_extract_paths","text":"named list \"data\" \"shape\" elements containing extract file paths.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_nhgis_ts_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NHGIS time series data — get_nhgis_ts_data","title":"Get NHGIS time series data — get_nhgis_ts_data","text":"Use define_nhgis_ts_extract(), ipumsr::submit_extract(), ipumsr::download_extract(), read_nhgis_files() define, submit, download, read NHGIS time series extract.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_nhgis_ts_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NHGIS time series data — get_nhgis_ts_data","text":"","code":"get_nhgis_ts_data(   year = NULL,   tables = NULL,   geography = c(\"county\", \"state\"),   extent = \"us\",   output = c(\"tidy\", \"wide\", \"file\"),   basis = 2008,   shape_year = NULL,   geometry = FALSE,   extract = NULL,   data_file = NULL,   shape_file = NULL,   state = NULL,   ...,   time_series_tables = NULL,   description = NULL,   shapefiles = NULL,   data_format = \"csv_no_header\",   validate = TRUE,   submit_extract = TRUE,   download_extract = TRUE,   read_files = TRUE,   download_dir = getwd(),   overwrite = FALSE,   progress = TRUE,   verbose = progress,   api_key = Sys.getenv(\"IPUMS_API_KEY\") )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/get_nhgis_ts_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NHGIS time series data — get_nhgis_ts_data","text":"output Used set tst_layout value. c(\"tidy\", \"wide\", \"file\") extract NULL, extract returned . data_file Path .zip archive containing NHGIS extract single file NHGIS extract. shape_file Path single .shp file .zip archive containing least one .shp file. See Details section. download_dir Path directory files written. Defaults current working directory. overwrite TRUE, overwrite conflicting files already exist download_dir. Defaults FALSE. progress TRUE, output progress bar showing status download request. Defaults TRUE. verbose Logical controlling whether display output loading data. TRUE, displays IPUMS conditions, progress bar, column types. Otherwise, suppressed. overridden readr.show_progress readr.show_col_types options, set. api_key API key associated user account. Defaults value IPUMS_API_KEY environment variable. See set_ipums_api_key().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipums_extract_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Get IPUMS Extract histories — ipums_extract_history","title":"Get IPUMS Extract histories — ipums_extract_history","text":"Get IPUMS Extract histories","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipums_extract_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get IPUMS Extract histories — ipums_extract_history","text":"","code":"get_nhgis_extract_history(...)  get_usa_extract_history(...)  get_cps_extract_history(...)  get_ipumsi_extract_history(...)"},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipums_extract_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get IPUMS Extract histories — ipums_extract_history","text":"... Arguments passed ipumsr::get_extract_history how_many number extract requests retrieve information. Defaults 10 recent extracts. delay Number seconds delay successive API requests, multiple requests needed retrieve records. delay highly unlikely necessary intended fallback event retrieve extract history without exceeding API rate limit. api_key API key associated user account. Defaults value IPUMS_API_KEY environment variable. See set_ipums_api_key().","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipumseasyr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ipumseasyr: Easy Access to IPUMS Data — ipumseasyr-package","title":"ipumseasyr: Easy Access to IPUMS Data — ipumseasyr-package","text":"package helper functions extending ipumsr package accessing NHGIS IMPUMS data sources.","code":""},{"path":[]},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipumseasyr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ipumseasyr: Easy Access to IPUMS Data — ipumseasyr-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipumsr_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to {ipumseasyr} package cache directory — ipumsr_cache_dir","title":"Get path to {ipumseasyr} package cache directory — ipumsr_cache_dir","text":"Get path {ipumseasyr} package cache directory","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/ipumsr_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to {ipumseasyr} package cache directory — ipumsr_cache_dir","text":"","code":"ipumsr_cache_dir(pkg = \"ipumseasyr\")"},{"path":"https://elipousson.github.io/ipumseasyr/reference/list_nhgis_shapefiles.html","id":null,"dir":"Reference","previous_headings":"","what":"List NHGIS Shapefiles — list_nhgis_shapefiles","title":"List NHGIS Shapefiles — list_nhgis_shapefiles","text":"List NHGIS Shapefiles","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/list_nhgis_shapefiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List NHGIS Shapefiles — list_nhgis_shapefiles","text":"","code":"list_nhgis_shapefiles(   geography = c(\"county\", \"state\"),   year,   extent = \"us\",   basis = 2008,   validate = FALSE,   ...,   api_key = Sys.getenv(\"IPUMS_API_KEY\") )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/list_nhgis_ts_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"List NHGIS time series tables — list_nhgis_ts_tables","title":"List NHGIS time series tables — list_nhgis_ts_tables","text":"Use ipumsr::get_metadata_nhgis() type = \"time_series_tables\" return data frame time series tables. Optionally filter geographical integration type \"nominal\" \"standardized\" (\"2010\" \"standardized 2010\" also work).","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/list_nhgis_ts_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List NHGIS time series tables — list_nhgis_ts_tables","text":"","code":"list_nhgis_ts_tables(   ...,   cache = TRUE,   cache_file = \"nhgis_time_series_tables.rds\",   refresh = FALSE,   integration = NULL )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/list_nhgis_ts_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List NHGIS time series tables — list_nhgis_ts_tables","text":"... Additional parameters passed ipumsr::get_metadata_nhgis() integration Optional filter geographical integration.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/lookup_nhgis_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup NHGIS State Code — lookup_nhgis_state","title":"Lookup NHGIS State Code — lookup_nhgis_state","text":"Lookup NHGIS State Code","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/lookup_nhgis_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup NHGIS State Code — lookup_nhgis_state","text":"","code":"lookup_nhgis_state(state)"},{"path":"https://elipousson.github.io/ipumseasyr/reference/lookup_nhgis_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup NHGIS State Code — lookup_nhgis_state","text":"state State name, abbreviation, FIPS code, NHGIS code","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/nhgis_ts_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"NHGIS Time Series Table names — nhgis_ts_tables","title":"NHGIS Time Series Table names — nhgis_ts_tables","text":"vector NHGIS time series table names named table descriptions.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/nhgis_ts_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NHGIS Time Series Table names — nhgis_ts_tables","text":"","code":"nhgis_ts_tables"},{"path":"https://elipousson.github.io/ipumseasyr/reference/nhgis_ts_tables.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NHGIS Time Series Table names — nhgis_ts_tables","text":"character vector 389 time series table names.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_ipums_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Read IPUMS geometry using ipumsr::read_ipums_sf — read_ipums_geometry","title":"Read IPUMS geometry using ipumsr::read_ipums_sf — read_ipums_geometry","text":"Read IPUMS geometry using ipumsr::read_ipums_sf","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_ipums_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read IPUMS geometry using ipumsr::read_ipums_sf — read_ipums_geometry","text":"","code":"read_ipums_geometry(   shape_file = NULL,   path = NULL,   file_select = NULL,   vars = \"GISJOIN\",   encoding = NULL,   bind_multiple = TRUE,   add_layer_var = NULL,   verbose = FALSE )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_ipums_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read IPUMS geometry using ipumsr::read_ipums_sf — read_ipums_geometry","text":"shape_file Path single .shp file .zip archive containing least one .shp file. See Details section. file_select shape_file .zip archive contains multiple files, expression identifying files load. Accepts character string specifying file name, tidyselect selection, index position. multiple files selected, bind_multiple must equal TRUE. vars Names variables include output. Accepts character vector names tidyselect selection. NULL, includes variables file. encoding Encoding use reading shape file. NULL, defaults \"latin1\" unless file includes .cpg metadata file encoding information. default value generally appropriate. bind_multiple TRUE shape_file contains multiple .shp files, row-bind files single sf object. Useful shape_file contains multiple files represent geographic units different extents (e.g. block-level data multiple states). add_layer_var TRUE, add variable output data indicating file row originates . Defaults FALSE unless bind_multiple = TRUE multiple files exist shape_file. column name always prefixed \"layer\", adjusted avoid name conflicts another column named \"layer\" already exists data. verbose TRUE report additional progress information load.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read NHGIS data using ipumsr::read_nhgis — read_nhgis_data","title":"Read NHGIS data using ipumsr::read_nhgis — read_nhgis_data","text":"Read NHGIS data using ipumsr::read_nhgis","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read NHGIS data using ipumsr::read_nhgis — read_nhgis_data","text":"","code":"read_nhgis_data(   data_file = NULL,   path = NULL,   file_select = NULL,   verbose = FALSE,   ... )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read NHGIS data using ipumsr::read_nhgis — read_nhgis_data","text":"data_file Path .zip archive containing NHGIS extract single file NHGIS extract. file_select data_file .zip archive contains multiple files, expression identifying file load. Accepts character vector specifying file name, tidyselect selection, index position. must uniquely identify file. verbose Logical controlling whether display output loading data. TRUE, displays IPUMS conditions, progress bar, column types. Otherwise, suppressed. overridden readr.show_progress readr.show_col_types options, set.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read NHGIS data and geometry — read_nhgis_files","title":"Read NHGIS data and geometry — read_nhgis_files","text":"Read NHGIS data geometry return named list combined sf object.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read NHGIS data and geometry — read_nhgis_files","text":"","code":"read_nhgis_files(   path = NULL,   data_file = NULL,   data_file_select = NULL,   shape_file = NULL,   shape_file_select = NULL,   verbose = FALSE,   geometry = FALSE,   ... )"},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read NHGIS data and geometry — read_nhgis_files","text":"path Optional data_file supplied. named list \"data\" \"shape\" element containing paths data_file shape_file arguments used ipumsr::read_nhgis() ipumsr::read_ipums_sf(). data_file Path .zip archive containing NHGIS extract single file NHGIS extract. data_file_select, shape_file_select Passed file_select parameter read_nhgis_data() read_ipums_geometry(). shape_file Path single .shp file .zip archive containing least one .shp file. See Details section. verbose Logical controlling whether display output loading data. TRUE, displays IPUMS conditions, progress bar, column types. Otherwise, suppressed. overridden readr.show_progress readr.show_col_types options, set.","code":""},{"path":"https://elipousson.github.io/ipumseasyr/reference/read_nhgis_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read NHGIS data and geometry — read_nhgis_files","text":"named list \"data\" \"shape\" elements combined sf data frame.","code":""}]
